@using NpcGen.Extensions;
@model  NpcGen.Models.NpcModels.NpcModel

@{
    ViewBag.Title = "A random commoner approaches...";
}

<h2>A random commoner approaches...</h2>

<p>@Model.Name is a @Model.Demeanour.FirstOrDefault().Description @(EnumExtensions.ToName(Model.Age)) @Model.Class.Name, distinguished from others because @Model.Pers() @Model.Quirks.FirstOrDefault().Description</p>

<p>@Model.Pers() has @Model.Appearance.GeneralAppearance.ElementAt(0).Feature and @Model.Appearance.GeneralAppearance.ElementAt(1).Feature</p>

<p>@Model.Poss(true) strong saves are 
    @{ var index = 0; }
    @foreach (var sv in Model.ClassSaves)
    {
        if (index > 0)
        {
            <text>, </text>
        }
        <b>@sv.Name.Replace(" Save", string.Empty)</b>
        index++;
    }.
</p>
<p>@Model.Name is skilled in 
    @foreach (var prof in Model.ClassSkills)
    {
        <b>@prof.Name</b> <text>(</text>@prof.Stat<text>)</text><text>,</text>
        
    } and curiously enough, also in <b>@Model.CustomProficiencies.FirstOrDefault().Name</b> (@Model.CustomProficiencies.FirstOrDefault().Stat).
</p>
<p>@Model.Name has the following attacks:
    <ul>
        @foreach (var at in Model.Class.Attacks)
        {
            <li>@at.Name (+@at.ToHit.ToString() - @at.Damage)</li>
        }
    </ul>
</p>
<p>As a typical @Model.Class.Name, @Model.Name has the following abilities:
    <ul>
        @foreach (var ab in Model.Class.ClassAbilities)
        {
            <li><b>@ab.Name</b> <br/>@ab.Description</li>
        }
    </ul>
</p>


