@using NpcGen.Extensions;
@using NpcGen.Helpers;
@using NpcGen.Enums;
@model  NpcGen.Models.NpcModels.NpcModel

@{
    ViewBag.Title = "A random stranger approaches...";
}
@section HeadScripts{
    @if (ViewBag.HasNpc)
    {
        <script src="https://www.google.com/jsapi"></script>
        <script type="text/javascript" src="~/Scripts/PortraitCreator.js"></script>
        <script type="text/javascript">
            initPortrait("npc portraits @EnumExtensions.ToName(Model.Gender) with @Model.Appearance.GeneralAppearance.ElementAt(1).Feature @EnumExtensions.ToName(Model.Age)");
        </script>
    }
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle=offcanvas]').click(function () {
                $('.row-offcanvas').toggleClass('active');
                $('.npc-container').toggleClass('col-sm-push-3');

            });


        });
    </script>
}
@*<div class="row row-offcanvas row-offcanvas-left">*@
<div>
    <!-- sidebar -->
    @*<div class="col-xs-12 col-sm-3 sidebar-offcanvas" id="sidebar" role="navigation">*@
    <div>
        @using (Html.BeginForm())
        {
            <p class="row">
                <label for="clsName">Pick a starting template</label><br />
                @Html.DropDownList("clsName", new SelectList(ViewBag.Classes), NpcGen.Constants.StringConstants.ClassesDdlDefault)
            </p>
            <p class="row">
                @Html.LabelFor(model => model.Para.ExperienceLevel)<br />
                @Html.DropDownListFor(model => model.Para.ExperienceLevel, Model.Para.ExperienceLevel.ToSelectList())
            </p>
            <p class="row">
                <strong>Select a stat buff</strong>
                <ul class="list-unstyled checkbox-list">
                    <li class="checkbox" title="Gives a 4 point boost to Strength, gives a random Strength based proficiency and proficiency in Strength Save">
                        @Html.CheckBoxFor(model => model.Para.MoreStr)
                        @Html.LabelFor(model => model.Para.MoreStr)
                    </li>
                    <li class="checkbox" title="Gives a 4 point boost to Dexterity, gives a random Dexterity based proficiency and proficiency in Dexterity Save">
                        @Html.CheckBoxFor(model => model.Para.MoreDex)
                        @Html.LabelFor(model => model.Para.MoreDex)
                    </li>
                    <li class="checkbox" title="Gives a 4 point boost to Constitution, proficiency in Constitution Save and sets Hit Points to maximum">
                        @Html.CheckBoxFor(model => model.Para.MoreCon)
                        @Html.LabelFor(model => model.Para.MoreCon)
                    </li>
                    <li class="checkbox" title="Gives a 4 point boost to Intelligence, gives a random Intelligence based proficiency and proficiency in Intelligence Save">
                        @Html.CheckBoxFor(model => model.Para.MoreInt)
                        @Html.LabelFor(model => model.Para.MoreInt)
                    </li>
                    <li class="checkbox" title="Gives a 4 point boost to Wisdom, gives a random Wisdom based proficiency and proficiency in Wisdom Save">
                        @Html.CheckBoxFor(model => model.Para.MoreWis)
                        @Html.LabelFor(model => model.Para.MoreWis)
                    </li>
                    <li class="checkbox" title="Gives a 4 point boost to Charisma, gives a random Charisma based proficiency and proficiency in Charisma Save">
                        @Html.CheckBoxFor(model => model.Para.MoreCha)
                        @Html.LabelFor(model => model.Para.MoreCha)
                    </li>
                </ul>
            </p>

            <input type="submit" value="Go" />
        }
    </div>




    <div class="npc-container col-xs-12 col-sm-9 col-sm-push-3">
        @if (ViewBag.HasNpc)
        {
            <div class="col-sm-6">

                <h2>A random stranger approaches...</h2>
                @NpcViewHelper.RenderDescription(Model)
                @NpcViewHelper.RenderAppearance(Model)



                <ul class="statblock list-unstyled">
                    <li class="stat"><span class="stat">Strength</span> @Model.Class.Strength (@Model.Class.AbilityModStringGet(Abilities.Strength))</li>
                    <li class="stat"><span class="stat">Dexterity</span> @Model.Class.Dexterity (@Model.Class.AbilityModStringGet(Abilities.Dexterity))</li>
                    <li class="stat"><span class="stat">Constitution</span> @Model.Class.Constitution (@Model.Class.AbilityModStringGet(Abilities.Constitution))</li>
                    <li class="stat"><span class="stat">Intelligence</span> @Model.Class.Intelligence (@Model.Class.AbilityModStringGet(Abilities.Intelligence))</li>
                    <li class="stat"><span class="stat">Wisdom</span> @Model.Class.Wisdom (@Model.Class.AbilityModStringGet(Abilities.Wisdom))</li>
                    <li class="stat"><span class="stat">Charisma</span> @Model.Class.Charisma (@Model.Class.AbilityModStringGet(Abilities.Charisma))</li>
                </ul>




                @if (Model.ClassSaves.Count > 0)
                {
                    @NpcViewHelper.RenderClassSaves(Model)
                }
               
                @NpcViewHelper.RenderClassSkills(Model)
                @NpcViewHelper.RenderAttacks(Model)
                @NpcViewHelper.RenderClassAbilities(Model)
                <p>
                    @Model.Poss(true) Armour Class = @Model.Class.ArmourClassGet() <br />
                    @Model.Poss(true) Hit Dice = @Model.Class.Level<br />
                    @Model.Poss(true) Hit Points = @Model.Class.HitPoints<br />
                    @Model.Poss(true) Passive Perception = @Model.Class.PassivePerceptionGet()
                </p>
            </div>

            <div id="portrait" class="col-sm-6">Loading...</div>
        }
    </div>
</div>