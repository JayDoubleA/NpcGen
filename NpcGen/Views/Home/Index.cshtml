@using NpcGen.Extensions;
@model  NpcGen.Models.NpcModels.NpcModel

@{
    ViewBag.Title = "A random commoner approaches...";
}
@section HeadScripts{

    <script src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">

    google.load('search', '1');

    var imageSearch;


    function searchComplete() {

          if (imageSearch.results && imageSearch.results.length > 0) {

            var contentDiv = document.getElementById('portrait');
            contentDiv.innerHTML = '';

            var results = imageSearch.results;

            var result = results[getRandomInt(0, imageSearch.results.length)];
            var imgContainer = document.createElement('div');

            var newImg = document.createElement('img');

            newImg.src = result.url;
            imgContainer.appendChild(newImg);
            newImg.className = "resize";

            contentDiv.appendChild(imgContainer);

           
        }
    }

    function OnLoad() {

        // Create an Image Search instance.
        imageSearch = new google.search.ImageSearch();

        // Set searchComplete as the callback function when a search is
        // complete.  The imageSearch object will have results in it.
        imageSearch.setSearchCompleteCallback(this, searchComplete, null);

        imageSearch.execute("portrait \"character\" nedieval \"@EnumExtensions.ToName(Model.Gender) with @Model.Appearance.GeneralAppearance.ElementAt(1).Feature\" @EnumExtensions.ToName(Model.Age)");
    }

    function getRandomInt(min, max) {
        return Math.floor(Math.random() * (max - min)) + min;
    }

    google.setOnLoadCallback(OnLoad);


</script>
}
<h2>A random commoner approaches...</h2>
<div class="col-sm-6">
    <p>@Model.Name is a @Model.Demeanour.FirstOrDefault().Description @(EnumExtensions.ToName(Model.Age).ToLower()) @Model.Class.Name, distinguished from others because @Model.Pers() @Model.Quirks.FirstOrDefault().Description.</p>

    <p>@Model.Pers(true) has @Model.Appearance.GeneralAppearance.ElementAt(0).Feature.ToLower() and @Model.Appearance.GeneralAppearance.ElementAt(1).Feature.ToLower().</p>

    <p>
        @Model.Poss(true) strong saves are
        @{ var index = 0; }
        @foreach (var sv in Model.ClassSaves)
        {
            if (index > 0)
            {
                <text>, </text>
            }
            <b>@sv.Name.Replace(" Save", string.Empty)</b>
            index++;
        }.
    </p>
    <p>
        @Model.Name is skilled in
        @foreach (var prof in Model.ClassSkills)
        {
            <b>@prof.Name</b> <text>(</text>@prof.Stat<text>)</text><text>,</text>

} and curiously enough, also in <b>@Model.CustomProficiencies.FirstOrDefault().Name</b> (@Model.CustomProficiencies.FirstOrDefault().Stat).
        </p>
        <p>
            @Model.Name has the following attacks:
            <ul>
                @foreach (var at in Model.Class.Attacks)
                {
                    <li>@at.Name (+@at.ToHit.ToString() - @at.Damage)</li>
                }
            </ul>
        </p>
        <p>
            As a typical @Model.Class.Name, @Model.Name has the following abilities:
            <ul>
                @foreach (var ab in Model.Class.ClassAbilities)
                {
                    <li><b>@ab.Name</b> <br />@ab.Description</li>
                }
            </ul>
        </p>
    </div>
<div id="portrait" class="col-sm-6">Loading...</div>

